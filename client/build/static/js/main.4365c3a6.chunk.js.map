{"version":3,"sources":["components/Canvas.js","actions/pictureActions.js","components/Gallery.js","App.js","actions/authActions.js","actions/errorActions.js","serviceWorker.js","reducers/pictureReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/rootReducer.js","index.js"],"names":["Canvas","onClick","event","canvas","refs","ctx","getContext","target","name","clearRect","width","height","strokeStyle","id","lineWidth","value","dataURL","src","toDataURL","props","postPicture","data","token","this","Math","floor","window","innerWidth","innerHeight","mouse","x","undefined","y","down","addEventListener","offsetX","offsetY","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","className","ref","style","backgroundColor","icon","faEraser","size","faTrashAlt","faSave","type","min","max","defaultValue","step","onChange","React","Component","protoTypes","PropTypes","object","isRequired","func","connect","state","authReducer","url","dispatch","config","headers","console","log","fetch","method","body","JSON","stringify","then","res","json","catch","err","Gallery","getPictures","prevProps","pictures","map","elem","key","alt","pictureReducer","App","getToken","msg","status","Boolean","location","hostname","match","defaultState","action","date","substr","isAuth","combineReducers","errorReducer","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4365c3a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Canvas.css';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { postPicture } from '../actions/pictureActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEraser, faTrashAlt, faSave } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const canvas = this.refs.canvas;\r\n    canvas.width = Math.floor(window.innerWidth / 2);\r\n    canvas.height = Math.floor(window.innerHeight / 2);\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let mouse = {\r\n      x: undefined,\r\n      y: undefined,\r\n      down: false\r\n    }\r\n\r\n    const borderX = 10;\r\n    const borderY = 10;\r\n    const margin = 20;\r\n\r\n    window.addEventListener('resize', () => {\r\n      canvas.width = Math.floor(window.innerWidth / 2);\r\n      canvas.height = Math.floor(window.innerHeight / 2);\r\n    })\r\n\r\n    window.addEventListener('mousedown', (event) => {\r\n      mouse.down = true\r\n      mouse.x = event.offsetX;\r\n      mouse.y = event.offsetY;\r\n    })\r\n\r\n    window.addEventListener('mousemove', (event) => {\r\n      if (mouse.down) {\r\n        if (event.x <= Math.floor(window.innerWidth / 4) - borderX) {\r\n          mouse.down = false\r\n          return\r\n        }\r\n        if (event.y >= Math.floor(window.innerHeight / 2) + borderY + margin || event.y <= margin) {\r\n          mouse.down = false\r\n          return\r\n        }\r\n        draw(mouse.x, mouse.y, event.offsetX, event.offsetY)\r\n        mouse.x = event.offsetX;\r\n        mouse.y = event.offsetY;\r\n      }\r\n    })\r\n\r\n    window.addEventListener('mouseup', () => {\r\n      mouse.down = false\r\n    })\r\n\r\n    window.addEventListener('mouseout', () => {\r\n      mouse.down = false\r\n    })\r\n\r\n    function draw(x1, y1, x2, y2) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n    }\r\n  }\r\n\r\n  onClick = (event) => {\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    switch (event.target.name) {\r\n      case('clear'):\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        break;\r\n      case('color'):\r\n        ctx.strokeStyle = event.target.id;\r\n        break;\r\n      case('size'):\r\n        ctx.lineWidth = event.target.value;\r\n        break;\r\n      case('save'):\r\n        let dataURL = {src: canvas.toDataURL()};\r\n        //console.log(dataURL);\r\n        //document.getElementById('saved').src = dataURL;\r\n        this.props.postPicture(dataURL, this.props.data.token);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {  \r\n    return (\r\n      <div className='drawingApp'>\r\n        <div className='canvasContainer'>\r\n          <canvas ref='canvas'></canvas>\r\n        </div>\r\n        <div className='tools'>\r\n          <div className='buttons'>      \r\n            <button onClick={this.onClick} name='color' id='black' style={{backgroundColor: 'black'}}></button>\r\n            <button onClick={this.onClick} name='color' id='gray' style={{backgroundColor: 'gray'}}></button>\r\n            <button onClick={this.onClick} name='color' id='red' style={{backgroundColor: 'red'}}></button>\r\n            <button onClick={this.onClick} name='color' id='orange' style={{backgroundColor: 'orange'}}></button>\r\n            <button onClick={this.onClick} name='color' id='yellow' style={{backgroundColor: 'yellow'}}></button>\r\n            <button onClick={this.onClick} name='color' id='green' style={{backgroundColor: 'green'}}></button>\r\n            <button onClick={this.onClick} name='color' id='blue' style={{backgroundColor: 'blue'}}></button>\r\n            <button onClick={this.onClick} name='color' id='purple' style={{backgroundColor: 'purple'}}></button>\r\n            <button onClick={this.onClick} name='color' id='white' className='icons btn-erase'><FontAwesomeIcon icon={faEraser} size=\"lg\"/> Eraser</button>\r\n            <button onClick={this.onClick} name='clear' className='icons btn-clear'><FontAwesomeIcon icon={faTrashAlt} size=\"lg\"/> Clear</button>\r\n            <button onClick={this.onClick} name='save' className='icons btn-save'><FontAwesomeIcon icon={faSave} size=\"lg\"/> Save</button>\r\n          </div>\r\n          <div>\r\n            <label>Size: </label>\r\n            <input type=\"range\" name=\"size\" min=\"1\" max=\"5\" defaultValue=\"1\" step=\"1\" onChange={this.onClick} className='slider'/>   \r\n          </div>\r\n        </div>\r\n        <div className='instructions'>\r\n          <h2>How to use:</h2>\r\n          <ul>\r\n            <li>Use your mouse and hold down left click in the canvas to start drawing.</li>\r\n            <li>You can change the line color and size using the buttons.</li>\r\n            <li>To display your drawing in the gallery, click on save when you are done drawing.</li>\r\n          </ul>\r\n        </div>\r\n      </div>        \r\n    )\r\n  }\r\n}\r\n\r\nCanvas.protoTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  postPicture: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.authReducer\r\n})\r\n\r\nexport default connect (mapStateToProps, { postPicture })(Canvas);","export const getPictures = () => (dispatch) => {\r\n  fetch('/api/pictures', {method: 'GET'})\r\n    .then(res => res.json())\r\n    .then(data => dispatch({type: 'GET_PICTURES', data}))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const postPicture = (url, token) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  if (token) {\r\n    config.headers['x-auth-token'] = token\r\n    console.log(config)\r\n  }\r\n\r\n  fetch('/api/pictures', {\r\n    method: 'POST', \r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'x-auth-token': token\r\n    },\r\n    body: JSON.stringify(url)\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => dispatch({type: 'POST_PICTURE', data}))\r\n    .catch(err => console.log(err))\r\n}","import React from 'react';\r\nimport '../css/Gallery.css';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getPictures } from '../actions/pictureActions';\r\n\r\nclass Gallery extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getPictures();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data.pictures !== prevProps.data.pictures)\r\n    this.props.getPictures();\r\n    //console.log('Update')\r\n    //console.log(this.props.data.pictures)\r\n  }\r\n\r\n  render() {\r\n\r\n    let pictures = this.props.data.pictures.map(elem => (\r\n      <div key={elem[0]}>\r\n        <img src={elem[0]} alt=''/>\r\n        <h6>{elem[1]}</h6>\r\n      </div>\r\n    ))\r\n    return (\r\n      <div>\r\n        <h1>Gallery</h1>\r\n        <div className=\"grid-container\">\r\n          {pictures}\r\n        </div>\r\n      </div>        \r\n    )\r\n  }\r\n}\r\n\r\nGallery.protoTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  getPictures: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.pictureReducer\r\n})\r\n\r\nexport default connect (mapStateToProps, { getPictures })(Gallery);","import React from 'react';\nimport './css/App.css';\nimport Canvas from './components/Canvas';\nimport Gallery from './components/Gallery';\nimport { connect } from 'react-redux';\nimport { getToken } from './actions/authActions'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    console.log('Mounted, trying to get token')\n    this.props.getToken();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Canvas />\n        <Gallery />\n      </div>\n    );\n  }\n}\n\nexport default connect ('', { getToken })(App);","import { returnError } from './errorActions'\r\n\r\nexport const getToken = () => dispatch => {\r\n  fetch('/api/user', {method: 'GET'})\r\n    .then(res => res.json())\r\n    .then(data => dispatch({type: 'GET_TOKEN', data}))\r\n    .catch(err => {\r\n      dispatch(returnError(err.res.data, err.res.status))\r\n      dispatch({type: 'AUTH_FAIL'})\r\n    })\r\n}","export const returnError = (msg, status) => {\r\n  return {\r\n    type: 'GET_ERROR',\r\n    data: {msg, status}\r\n  }\r\n}\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: 'CLEAR_ERROR'\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultState = {\r\n  pictures: []\r\n}\r\n\r\nconst pictureReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PICTURES\":\r\n      return {pictures: [...action.data.map(elem => ([elem.src, elem.date.substr(0,10)]))]};\r\n      //return state\r\n    case \"POST_PICTURE\":\r\n      //console.log('Uploaded', action.data)\r\n      return {pictures: [...state.pictures, action.data]};\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pictureReducer","const defaultState = {\r\n  token: null,\r\n  isAuth: null\r\n}\r\n\r\nconst authReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_TOKEN\":\r\n      //console.log(action.data.token)\r\n      return {\r\n        token: action.data.token,\r\n        isAuth: true\r\n      }\r\n    case \"AUTH_FAIL\":\r\n      return defaultState\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer","const defaultState = {\r\n  msg: {},\r\n  status: null\r\n}\r\n\r\nconst authReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_ERROR\":\r\n      console.log(action.data.msg, action.data.status)\r\n      return {\r\n        msg: action.data.msg,\r\n        status: action.data.status\r\n      }\r\n    case \"CLEAR_ERROR\":\r\n      return defaultState\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer","import { combineReducers } from 'redux';\r\nimport pictureReducer from './pictureReducer';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n  pictureReducer, authReducer, errorReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}